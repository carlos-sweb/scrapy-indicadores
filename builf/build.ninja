# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.31

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: indicadores
# Configurations: 
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5

# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = /home/sweb/github-project/scrapy-indicadores/builf/
# =============================================================================
# Object build statements for EXECUTABLE target indicadores


#############################################
# Order-only phony target for indicadores

build cmake_object_order_depends_target_indicadores: phony || .

build CMakeFiles/indicadores.dir/src/main.cpp.o: CXX_COMPILER__indicadores_unscanned_ /home/sweb/github-project/scrapy-indicadores/src/main.cpp || cmake_object_order_depends_target_indicadores
  DEFINES = -DINSTALL_BIN_DIR=\"/opt/indicadores/bin\"
  DEP_FILE = CMakeFiles/indicadores.dir/src/main.cpp.o.d
  FLAGS = -std=gnu++23
  INCLUDES = -I/home/sweb/github-project/scrapy-indicadores/includes -I/usr/local/include/cpr
  OBJECT_DIR = CMakeFiles/indicadores.dir
  OBJECT_FILE_DIR = CMakeFiles/indicadores.dir/src

build CMakeFiles/indicadores.dir/src/scrapycpp.cpp.o: CXX_COMPILER__indicadores_unscanned_ /home/sweb/github-project/scrapy-indicadores/src/scrapycpp.cpp || cmake_object_order_depends_target_indicadores
  DEFINES = -DINSTALL_BIN_DIR=\"/opt/indicadores/bin\"
  DEP_FILE = CMakeFiles/indicadores.dir/src/scrapycpp.cpp.o.d
  FLAGS = -std=gnu++23
  INCLUDES = -I/home/sweb/github-project/scrapy-indicadores/includes -I/usr/local/include/cpr
  OBJECT_DIR = CMakeFiles/indicadores.dir
  OBJECT_FILE_DIR = CMakeFiles/indicadores.dir/src


# =============================================================================
# Link build statements for EXECUTABLE target indicadores


#############################################
# Link the executable indicadores

build indicadores: CXX_EXECUTABLE_LINKER__indicadores_ CMakeFiles/indicadores.dir/src/main.cpp.o CMakeFiles/indicadores.dir/src/scrapycpp.cpp.o | /usr/local/lib64/liblexbor_static.a /usr/local/lib64/libcpr.a /usr/local/lib64/libada.a /usr/local/lib64/libc_print.a
  DEP_FILE = CMakeFiles/indicadores.dir/link.d
  LINK_FLAGS = -Wl,--dependency-file=CMakeFiles/indicadores.dir/link.d
  LINK_LIBRARIES = -Wl,-rpath,/usr/local/lib64  -lcurl  -lcrypto  -lssl  /usr/local/lib64/liblexbor_static.a  /usr/local/lib64/libcpr.a  /usr/local/lib64/libada.a  /usr/local/lib64/libc_print.a
  OBJECT_DIR = CMakeFiles/indicadores.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = indicadores
  TARGET_PDB = indicadores.dbg


#############################################
# Utility command for run

build run: phony CMakeFiles/run indicadores


#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /home/sweb/github-project/scrapy-indicadores/builf && /usr/bin/ccmake -S/home/sweb/github-project/scrapy-indicadores -B/home/sweb/github-project/scrapy-indicadores/builf
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /home/sweb/github-project/scrapy-indicadores/builf && /usr/bin/cmake --regenerate-during-build -S/home/sweb/github-project/scrapy-indicadores -B/home/sweb/github-project/scrapy-indicadores/builf
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build list_install_components: phony


#############################################
# Utility command for install

build CMakeFiles/install.util: CUSTOM_COMMAND all
  COMMAND = cd /home/sweb/github-project/scrapy-indicadores/builf && /usr/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build install: phony CMakeFiles/install.util


#############################################
# Utility command for install/local

build CMakeFiles/install/local.util: CUSTOM_COMMAND all
  COMMAND = cd /home/sweb/github-project/scrapy-indicadores/builf && /usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build install/local: phony CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build CMakeFiles/install/strip.util: CUSTOM_COMMAND all
  COMMAND = cd /home/sweb/github-project/scrapy-indicadores/builf && /usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build install/strip: phony CMakeFiles/install/strip.util


#############################################
# Custom command for CMakeFiles/run

build CMakeFiles/run | ${cmake_ninja_workdir}CMakeFiles/run: CUSTOM_COMMAND indicadores || indicadores
  COMMAND = cd /home/sweb/github-project/scrapy-indicadores/builf && /home/sweb/github-project/scrapy-indicadores/builf/indicadores

# =============================================================================
# Target aliases.

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: /home/sweb/github-project/scrapy-indicadores/builf

build all: phony indicadores

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | /home/sweb/github-project/scrapy-indicadores/CMakeLists.txt /usr/share/cmake/Modules/CMakeCXXInformation.cmake /usr/share/cmake/Modules/CMakeCommonLanguageInclude.cmake /usr/share/cmake/Modules/CMakeGenericSystem.cmake /usr/share/cmake/Modules/CMakeInitializeConfigs.cmake /usr/share/cmake/Modules/CMakeLanguageInformation.cmake /usr/share/cmake/Modules/CMakeSystemSpecificInformation.cmake /usr/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake /usr/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake /usr/share/cmake/Modules/Compiler/GNU-CXX.cmake /usr/share/cmake/Modules/Compiler/GNU.cmake /usr/share/cmake/Modules/FindOpenSSL.cmake /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake /usr/share/cmake/Modules/FindPackageMessage.cmake /usr/share/cmake/Modules/FindPkgConfig.cmake /usr/share/cmake/Modules/GNUInstallDirs.cmake /usr/share/cmake/Modules/Internal/CMakeCXXLinkerInformation.cmake /usr/share/cmake/Modules/Internal/CMakeCommonLinkerInformation.cmake /usr/share/cmake/Modules/Linker/GNU-CXX.cmake /usr/share/cmake/Modules/Linker/GNU.cmake /usr/share/cmake/Modules/Platform/Linker/GNU.cmake /usr/share/cmake/Modules/Platform/Linker/Linux-GNU-CXX.cmake /usr/share/cmake/Modules/Platform/Linker/Linux-GNU.cmake /usr/share/cmake/Modules/Platform/Linux-GNU-CXX.cmake /usr/share/cmake/Modules/Platform/Linux-GNU.cmake /usr/share/cmake/Modules/Platform/Linux-Initialize.cmake /usr/share/cmake/Modules/Platform/Linux.cmake /usr/share/cmake/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.31.6/CMakeCXXCompiler.cmake CMakeFiles/3.31.6/CMakeSystem.cmake
  pool = console


#############################################
# A missing CMake input file is not an error.

build /home/sweb/github-project/scrapy-indicadores/CMakeLists.txt /usr/share/cmake/Modules/CMakeCXXInformation.cmake /usr/share/cmake/Modules/CMakeCommonLanguageInclude.cmake /usr/share/cmake/Modules/CMakeGenericSystem.cmake /usr/share/cmake/Modules/CMakeInitializeConfigs.cmake /usr/share/cmake/Modules/CMakeLanguageInformation.cmake /usr/share/cmake/Modules/CMakeSystemSpecificInformation.cmake /usr/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake /usr/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake /usr/share/cmake/Modules/Compiler/GNU-CXX.cmake /usr/share/cmake/Modules/Compiler/GNU.cmake /usr/share/cmake/Modules/FindOpenSSL.cmake /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake /usr/share/cmake/Modules/FindPackageMessage.cmake /usr/share/cmake/Modules/FindPkgConfig.cmake /usr/share/cmake/Modules/GNUInstallDirs.cmake /usr/share/cmake/Modules/Internal/CMakeCXXLinkerInformation.cmake /usr/share/cmake/Modules/Internal/CMakeCommonLinkerInformation.cmake /usr/share/cmake/Modules/Linker/GNU-CXX.cmake /usr/share/cmake/Modules/Linker/GNU.cmake /usr/share/cmake/Modules/Platform/Linker/GNU.cmake /usr/share/cmake/Modules/Platform/Linker/Linux-GNU-CXX.cmake /usr/share/cmake/Modules/Platform/Linker/Linux-GNU.cmake /usr/share/cmake/Modules/Platform/Linux-GNU-CXX.cmake /usr/share/cmake/Modules/Platform/Linux-GNU.cmake /usr/share/cmake/Modules/Platform/Linux-Initialize.cmake /usr/share/cmake/Modules/Platform/Linux.cmake /usr/share/cmake/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.31.6/CMakeCXXCompiler.cmake CMakeFiles/3.31.6/CMakeSystem.cmake: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
